name: Builds
on:
  push:
    branches:
      - main

    paths-ignore:
      - ".gitignore"
      - "CLAUDE.md"
      - "README.md"

  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{matrix.os}}
    name: ${{matrix.name}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - identifier: windows-x86_64-debug
            os: windows-latest
            name: 🏁 Windows Debug
          - identifier: windows-x86_64-release
            os: windows-latest
            name: 🏁 Windows Release
          - identifier: macos-arm64-debug
            os: macos-latest
            name: 🍎 macOS Debug
          - identifier: macos-arm64-release
            os: macos-latest
            name: 🍎 macOS Release
          - identifier: linux-x86_64-debug
            os: ubuntu-latest
            name: 🐧 Linux Debug
          - identifier: linux-x86_64-release
            os: ubuntu-latest
            name: 🐧 Linux Release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup CMake
        uses: lukka/get-cmake@4169813123dd72674c1697fc8f2554818db4c92b

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.identifier }}

      - name: Configure build
        run: cmake --preset ${{ matrix.identifier }}

      - name: Build
        run: cmake --build --preset ${{ matrix.identifier }} -j 1

      - name: Install Godot (Windows)
        if: runner.os == 'Windows'
        run: |
          curl -sL -o godot.zip https://github.com/godotengine/godot/releases/download/4.5.1-stable/Godot_v4.5.1-stable_win64.exe.zip
          unzip -q godot.zip
          mv Godot_v4.5.1-stable_win64.exe "$RUNNER_TEMP/godot.exe"
          echo "GODOT_EXECUTABLE=$RUNNER_TEMP/godot.exe" >> $GITHUB_ENV

      - name: Install Godot (Linux)
        if: runner.os == 'Linux'
        run: |
          curl -sL -o godot.zip https://github.com/godotengine/godot/releases/download/4.5.1-stable/Godot_v4.5.1-stable_linux.x86_64.zip
          unzip -q godot.zip
          mv Godot_v4.5.1-stable_linux.x86_64 "$RUNNER_TEMP/godot"
          echo "GODOT_EXECUTABLE=$RUNNER_TEMP/godot" >> $GITHUB_ENV
      
      - name: Install Godot (macOS)
        if: runner.os == 'macOS'
        run: |
          curl -sL -o godot.zip https://github.com/godotengine/godot/releases/download/4.5.1-stable/Godot_v4.5.1-stable_macos.universal.zip
          unzip -q godot.zip
          mv Godot.app "$RUNNER_TEMP/Godot.app"
          echo "GODOT_EXECUTABLE=$RUNNER_TEMP/Godot.app/Contents/MacOS/Godot" >> $GITHUB_ENV

      - name: Checking libraries were copied to demo project
        run: ls -la demo/addons/luau_gdextension/bin/

      - name: Run tests
        # Use CTest to run all tests (C++ and GDScript via Godot)
        # Tests only run on Debug builds (BUILD_TESTING=ON)
        if: contains(matrix.identifier, 'debug')
        run: |
          "$GODOT_EXECUTABLE" --headless --path demo/ --import
          cd build
          ctest --output-on-failure --verbose

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: github.event_name != 'pull_request'
        with:
          name: luau-gdextension-${{ matrix.identifier }}
          path: |
            demo/addons/luau_gdextension/**
            !demo/addons/luau_gdextension/**/*_tests*

  merge:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: luau-gdextension
          pattern: luau-gdextension-*
          delete-merged: true
