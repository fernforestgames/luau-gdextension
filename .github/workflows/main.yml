name: Builds
permissions:
  contents: read

on:
  push:
    branches:
      - main

    paths-ignore:
      - ".gitignore"
      - "CLAUDE.md"
      - "README.md"

  pull_request:

env:
  LIBNAME: luau-gdextension

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{matrix.os}}
    name: ${{matrix.name}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - identifier: windows-debug
            os: windows-latest
            name: üèÅ Windows Debug
            build_type: Debug
            platform: windows
            arch: x86_64
          - identifier: windows-release
            os: windows-latest
            name: üèÅ Windows Release
            build_type: Release
            platform: windows
            arch: x86_64
          - identifier: macos-debug
            os: macos-latest
            name: üçé macOS Debug
            build_type: Debug
            platform: macos
            arch: arm64
          - identifier: macos-release
            os: macos-latest
            name: üçé macOS Release
            build_type: Release
            platform: macos
            arch: arm64
          - identifier: linux-debug
            os: ubuntu-latest
            name: üêß Linux Debug
            build_type: Debug
            platform: linux
            arch: x86_64
          - identifier: linux-release
            os: ubuntu-latest
            name: üêß Linux Release
            build_type: Release
            platform: linux
            arch: x86_64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup CMake
        uses: lukka/get-cmake@4169813123dd72674c1697fc8f2554818db4c92b

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.platform }}-${{ matrix.arch }}-${{ matrix.build_type }}

      - name: Configure build
        run: cmake --preset ${{ matrix.build_type == 'Debug' && 'default' || 'release' }}

      - name: Build
        run: cmake --build --preset ${{ matrix.build_type == 'Debug' && 'default' || 'release' }} -j 1

      - name: Download Godot
        run: |
          if [ "${{ matrix.platform }}" = "windows" ]; then
            curl -L -o godot.zip https://github.com/godotengine/godot/releases/download/4.5.1-stable/Godot_v4.5.1-stable_win64.exe.zip
            unzip -q godot.zip
            mv Godot_v4.5.1-stable_win64.exe godot.exe
          elif [ "${{ matrix.platform }}" = "linux" ]; then
            curl -L -o godot.zip https://github.com/godotengine/godot/releases/download/4.5.1-stable/Godot_v4.5.1-stable_linux.x86_64.zip
            unzip -q godot.zip
            chmod +x Godot_v4.5.1-stable_linux.x86_64
            mv Godot_v4.5.1-stable_linux.x86_64 godot
          elif [ "${{ matrix.platform }}" = "macos" ]; then
            curl -L -o godot.zip https://github.com/godotengine/godot/releases/download/4.5.1-stable/Godot_v4.5.1-stable_macos.universal.zip
            unzip -q godot.zip
            # macOS app bundle structure
            chmod +x Godot.app/Contents/MacOS/Godot
            ln -s Godot.app/Contents/MacOS/Godot godot
          fi
        shell: bash

      - name: Run tests
        # Runs both C++ and GDScript tests (C++ tests only available in Debug builds)
        if: matrix.build_type == 'Debug'
        run: |
          if [ "${{ matrix.platform }}" = "windows" ]; then
            ./godot.exe --headless --path demo/ -- --run-tests
          else
            ./godot --headless --path demo/ -- --run-tests
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.LIBNAME }}-${{ matrix.platform }}-${{ matrix.arch }}-${{ matrix.build_type }}
          path: |
            ${{ github.workspace }}/bin/**/*

  merge:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: luau-gdextension
          pattern: ${{ env.LIBNAME }}-*
          delete-merged: true
